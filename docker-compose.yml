services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    container_name: report-collector
    ports:
      - "${APP_PORT:-8080}:8080"
    env_file:
      - .env
    command: ["/app/server"]
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/healthz" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - report-collector

  mysql:
    image: mysql:8.0
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_DATABASE: ${DB_NAME:-reports}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - report-collector
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - report-collector
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # memcached:
  #   image: memcached:alpine
  #   ports:
  #     - "11211:11211"
  #   networks:
  #     - report-collector
  #   healthcheck:
  #     test: ["CMD-SHELL", "nc -z localhost 11211"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

volumes:
  mysql-data:

networks:
  report-collector:
    driver: bridge
